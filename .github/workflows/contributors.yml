name: Generate Contributors List

on:
  push:
    branches: [main]
  workflow_dispatch:
permissions:
  contents: write
jobs:
  generate-contributors:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2Ô∏è‚É£ Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3Ô∏è‚É£ Install dependencies (no package.json needed)
      - name: Install required dependencies
        run: npm install js-yaml gray-matter node-fetch@2 glob

      # 4Ô∏è‚É£ Create the script (NO escaped backticks ‚Äî valid JS)
      - name: Create generate-contributors.js
        run: |
          mkdir -p .github/scripts
          cat > .github/scripts/generate-contributors.js <<'EOF'
          const fs = require("fs");
          const matter = require("gray-matter");
          const fetch = require("node-fetch");
          const glob = require("glob");

          const token = process.env.GITHUB_TOKEN;
          const repo = process.env.REPO;

          if (!token || !repo) {
            console.error("‚ùå Missing GITHUB_TOKEN or REPO in env vars");
            process.exit(1);
          }

          async function fetchRepoContributors() {
            let contributors = [];
            let page = 1;
            while (true) {
              const res = await fetch(
                `https://api.github.com/repos/${repo}/contributors?per_page=100&page=${page}`,
                { headers: { Authorization: `token ${token}` } }
              );
              if (!res.ok) break;
              const data = await res.json();
              if (data.length === 0) break;
              contributors.push(...data.map((c) => c.login));
              page++;
            }
            return contributors;
          }

          function fetchMdContributors() {
            const files = glob.sync("**/*.md", { ignore: ["node_modules/**", "CONTRIBUTORS.md"] });
            let all = [];
            for (const file of files) {
              const parsed = matter(fs.readFileSync(file, "utf8"));
              if (parsed.data && parsed.data.contributors) {
                const list = Array.isArray(parsed.data.contributors)
                  ? parsed.data.contributors
                  : [parsed.data.contributors];
                all.push(...list.map((c) => String(c).trim()));
              }
            }
            return all;
          }

          async function fetchContributorDetails(usernames) {
            const details = [];
            for (const username of usernames) {
              const res = await fetch(`https://api.github.com/users/${username}`, {
                headers: { Authorization: `token ${token}` },
              });
              if (!res.ok) continue;
              const data = await res.json();
              details.push({ login: data.login, avatar_url: data.avatar_url, html_url: data.html_url });
            }
            return details;
          }

          function generateMarkdown(contributors) {
            let md = "# üèÜ Contributors\n\nThanks to all the amazing people who contributed to this project!\n\n";
            const perRow = 6;
            for (let i = 0; i < contributors.length; i += perRow) {
              const row = contributors.slice(i, i + perRow)
                .map(c => `[<img src="${c.avatar_url}&s=80" width="80" height="80" alt="${c.login}"/>](${c.html_url})`)
                .join(" ");
              md += row + "\n\n";
            }
            md += "---\nGenerated automatically by a [GitHub Action](.github/workflows/contributors.yml).\n";
            return md;
          }

          (async () => {
            console.log("üì¶ Fetching repo contributors...");
            const repoContribs = await fetchRepoContributors();
            console.log("üìÑ Fetching MD file contributors...");
            const mdContribs = fetchMdContributors();
            const allContribs = Array.from(new Set([...repoContribs, ...mdContribs].map((u) => u.trim())));
            console.log(`‚úÖ Found ${allContribs.length} unique contributors`);
            console.log("üñº Fetching contributor profile details...");
            const details = await fetchContributorDetails(allContribs);
            console.log("üìù Generating CONTRIBUTORS.md...");
            fs.writeFileSync("CONTRIBUTORS.md", generateMarkdown(details), "utf8");
            console.log("üéâ CONTRIBUTORS.md updated!");
          })();
          EOF

      # 5Ô∏è‚É£ Run the script
      - name: Run script
        run: node .github/scripts/generate-contributors.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}

      # 6Ô∏è‚É£ Commit & push if CONTRIBUTORS.md changed
      - name: Commit and push if changed
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if [ -n "$(git status --porcelain)" ]; then
            git add CONTRIBUTORS.md
            git commit -m "chore: update CONTRIBUTORS.md [skip ci]"
            git push
          fi
